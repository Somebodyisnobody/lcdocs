#!/bin/env python3

import json
import sys
import pathlib

from mako.lookup import TemplateLookup

if len(sys.argv) < 2:
	print('Not enough arguments!', file=sys.stderr)
	print(f'Syntax: {sys.argv[0]} language')
	sys.exit(1)

# Check if target language is supported
AVAILABLE_LANGS = ['de', 'en']
lang = sys.argv[1]
if lang not in AVAILABLE_LANGS:
	print(f'Language "{lang}" is not available!', file=sys.stderr)
	print(f'Available languages: {", ".join(AVAILABLE_LANGS)}')
	sys.exit(1)

cwd = pathlib.Path().resolve()
selfd = pathlib.Path(__file__).parent.resolve()

print(f'Generating content.html for language "{lang}" ...')

# Load a file with strings that have to be translated in the output html file
with open(pathlib.PurePath.joinpath(selfd, f'templates/content.{lang}.i18n.json'), 'r') as f:
	i18n = json.load(f)

# Load in summary report which must exist in the project root dir. This report is generated by generate_summary.py
with open(pathlib.PurePath.joinpath(cwd, 'lcdocs_summary.json'), 'r') as f:
	summary = json.load(f)

lookup = TemplateLookup(directories=[pathlib.PurePath.joinpath(selfd, 'templates')])
html = lookup.get_template('content.html').render(lang=lang, i18n=i18n, lookup=lookup)

with open(pathlib.PurePath.joinpath(cwd, f'online/{lang}/content.html'), 'w') as f:
	f.write(html)
