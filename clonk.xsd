<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning"
           vc:minVersion="1.0" elementFormDefault="qualified" targetNamespace="https://clonkspot.org"
           xmlns="https://clonkspot.org">
    <!-- Import xml: namespace -->
    <xs:import namespace="http://www.w3.org/XML/1998/namespace"
               schemaLocation="http://www.w3.org/2009/01/xml.xsd"/>
    <xs:annotation>
        <xs:documentation>
            ClonkDoc XML Schema

            This is the schema for documenting functions, constants or general information about Clonk

            The schema exists of three possible root elements:
            * doc - for general documentation
            * func - semantically for functions
            * const - semantically for constants

            Namespace =

            Changes:
            2022-02 by Funni: Initial release of the schema file based on the more loose DTD.
        </xs:documentation>
    </xs:annotation>

    <!-- Clonk documentation element.
    The default language of the xml:lang attribute is "de". This is used in the transformation process to choose the right HTML-template. In transformation this value is automatically replaced. -->
    <xs:element name="clonkDoc">
        <xs:complexType>
            <xs:sequence>
                <xs:choice>
                    <!-- General documentation with HTML elements for formatting. -->
                    <xs:element name="doc">
                        <xs:complexType>
                            <xs:sequence>
                                <!-- Title of the page, used in browser, not on the page itself. Must have between 5 and 70 characters. -->
                                <xs:element name="title">
                                    <xs:simpleType>
                                        <xs:restriction base="xs:string">
                                            <xs:minLength value="5"/>
                                            <xs:maxLength value="70"/>
                                        </xs:restriction>
                                    </xs:simpleType>
                                </xs:element>
                                <xs:sequence maxOccurs="unbounded">
                                    <!-- Title used on the page. Can be formatted with HTML inline elements. -->
                                    <xs:element name="h" type="htmlMixedContainsStandardTextFormatElements"/>
                                    <xs:group ref="docPart" maxOccurs="unbounded"/>
                                </xs:sequence>
                                <!-- Enter information here about changes. This helps C4Scripters track what changes were made and when, and they can adjust their code accordingly for each version. -->
                                <xs:element name="history" type="history" minOccurs="0"/>
                            </xs:sequence>
                        </xs:complexType>
                    </xs:element>
                    <!-- Clonk C4Script functions. -->
                    <xs:element name="func">
                        <xs:complexType>
                            <xs:sequence>
                                <!-- Title must have the function name without whitespaces or "()". -->
                                <xs:element name="title" type="entityName"/>
                                <!-- A category the function does fit into. If no category matches don't hesitate to change the XML schema and add a new category. -->
                                <xs:element name="category" type="functionCategory"/>
                                <!-- Clonk versions in which the function was introduced or changed. Please also use the <history> element at the end to describe the changes! Contains at lease a <version> and unbounded <extversion> elements. -->
                                <xs:element name="versions" type="entityVersions"/>
                                <!-- If set the function will be marked as deprecated. This will be added automatically to the history-table at the end of the page. -->
                                <xs:element minOccurs="0" name="deprecated" type="deprecated"/>
                                <!-- Description of the syntax of the function. -->
                                <xs:element name="syntax">
                                    <xs:complexType>
                                        <xs:sequence>
                                            <!-- The returned data type for this function. -->
                                            <xs:element name="rtype">
                                                <xs:simpleType>
                                                    <xs:union memberTypes="functionParamDataTypes">
                                                        <xs:simpleType>
                                                            <xs:restriction base="xs:string">
                                                                <xs:enumeration value="void"/>
                                                            </xs:restriction>
                                                        </xs:simpleType>
                                                    </xs:union>
                                                </xs:simpleType>
                                            </xs:element>
                                            <!-- Marks the return value as reference. -->
                                            <xs:element minOccurs="0" name="isReference">
                                                <xs:complexType/>
                                            </xs:element>
                                            <!-- Contains at least one <param>. -->
                                            <xs:element minOccurs="0" name="params">
                                                <xs:complexType>
                                                    <xs:sequence>
                                                        <!--
                                                        Contains <type>, <name>, <desc>, <isReference /> and <optional />.
                                                        <isReference /> is used when the argument requires a reference
                                                        <optional /> is used when the argument is optional.
                                                        -->
                                                        <xs:element maxOccurs="unbounded" name="param">
                                                            <xs:complexType>
                                                                <xs:sequence>
                                                                    <!-- The input data type. -->
                                                                    <xs:element name="type"
                                                                                type="functionParamDataTypes"/>
                                                                    <!-- The name of the argument. -->
                                                                    <xs:element name="name">
                                                                        <xs:simpleType>
                                                                            <xs:restriction base="xs:token">
                                                                                <xs:pattern value="(\w|\.|_)+"/>
                                                                            </xs:restriction>
                                                                        </xs:simpleType>
                                                                    </xs:element>
                                                                    <!-- A description for better understanding. HTML formatting elements can be used. -->
                                                                    <xs:element name="desc" type="htmlText"/>
                                                                    <!-- Marks the argument as reference. -->
                                                                    <xs:element minOccurs="0" name="isReference">
                                                                        <xs:complexType/>
                                                                    </xs:element>
                                                                    <!-- Marks the argument as optional. -->
                                                                    <xs:element minOccurs="0" name="optional">
                                                                        <xs:complexType/>
                                                                    </xs:element>
                                                                </xs:sequence>
                                                            </xs:complexType>
                                                        </xs:element>
                                                    </xs:sequence>
                                                </xs:complexType>
                                            </xs:element>
                                        </xs:sequence>
                                    </xs:complexType>
                                </xs:element>
                                <!-- Description what the function does. -->
                                <xs:element name="desc" type="htmlText"/>
                                <!-- Additional important information about limitations, differences to other, similar functions etc. You can use multiple <remark> elements. -->
                                <xs:element minOccurs="0" maxOccurs="unbounded" name="remark" type="htmlText"/>
                                <!-- Provide examples for a better understanding of the function. Please start with simple examples. -->
                                <xs:element minOccurs="0" name="examples" type="examples"/>
                                <!-- Links to other similar and related functions or documentation. You can use <funcLink>, <emLink>, <constLink> and <callbackLink> to link to other documentation. -->
                                <xs:element minOccurs="0" name="related">
                                    <xs:complexType>
                                        <xs:group ref="htmlDocsLinks" maxOccurs="unbounded"/>
                                    </xs:complexType>
                                </xs:element>
                                <!-- Enter information here about changes. This helps C4Scripters track what changes were made and when, and they can adjust their code accordingly for each version. -->
                                <xs:element name="history" type="history" minOccurs="0"/>
                            </xs:sequence>
                        </xs:complexType>
                    </xs:element>
                    <!-- Clonk C4Script constants as set of constants. This will be formed to an HTML table.
                    The attribute "activateBitmask" is a boolean which can make the table clickable and show a bit mask -->
                    <xs:element name="constGroup">
                        <xs:complexType>
                            <xs:sequence>
                                <!-- Spelling title for the constant group. -->
                                <xs:element name="title" type="xs:string"/>
                                <!-- Description of the group. "What is it for?" -->
                                <xs:element name="description" type="htmlText"/>
                                <!-- This element declares a single constant. Use this element for each constant.
                                The attribute "bitPos" is used for a custom bit position. If one custom bit position is set then all others also have to be set. -->
                                <xs:element name="const" maxOccurs="unbounded">
                                    <xs:complexType>
                                        <xs:sequence maxOccurs="unbounded">
                                            <!-- Name of the constant. This must be the same as used in C4Script. -->
                                            <xs:element name="name">
                                                <xs:simpleType>
                                                    <xs:restriction base="xs:token">
                                                        <xs:pattern value="(_|\w)(\w|_|\d)+"/>
                                                    </xs:restriction>
                                                </xs:simpleType>
                                            </xs:element>
                                            <!-- A category the constant does fit into. If no category matches don't hesitate to change the XML schema and add a new category. -->
                                            <xs:element name="category" type="functionCategory"/>
                                            <!-- Description what this constant stands for. -->
                                            <xs:element name="description" type="htmlText"/>
                                            <!-- Clonk versions in which the constant was introduced. Please also use the <history> element at the end to describe any changes! -->
                                            <xs:element name="version" type="clonkVersionOrUnknown"/>
                                            <!-- The value the constant has in C4Script. -->
                                            <xs:element name="value" type="xs:integer"/>
                                            <!-- If set the function will be marked as deprecated. This will be added automatically to the history-table at the end of the page. -->
                                            <xs:element minOccurs="0" name="deprecated" type="deprecated"/>
                                        </xs:sequence>
                                        <!-- Is used for a custom bit position between 0 and 32. Choose 0 for a "none" value where all bits are 0.
                                If not set the bit positions are calculated automatically. If one custom bit position is set then all others also have to be set manually. -->
                                        <xs:attribute name="bitPos">
                                            <xs:simpleType>
                                                <xs:restriction base="xs:nonNegativeInteger">
                                                    <xs:minInclusive value="0"/>
                                                    <xs:maxInclusive value="32"/>
                                                </xs:restriction>
                                            </xs:simpleType>
                                        </xs:attribute>
                                    </xs:complexType>
                                </xs:element>
                                <!-- Provide examples for a better understanding of the constants in functions. Please start with simple examples. -->
                                <xs:element minOccurs="0" name="examples" type="examples"/>
                                <!-- Enter information here about changes. This helps C4Scripters track what changes were made and when, and they can adjust their code accordingly for each version. -->
                                <xs:element name="history" minOccurs="0">
                                    <xs:complexType>
                                        <xs:sequence>
                                            <!-- A single change in the change list. Use this for each change that has been done.-->
                                            <xs:element name="change" maxOccurs="unbounded">
                                                <xs:complexType>
                                                    <xs:sequence>
                                                        <xs:group ref="generalChangeInformation"/>
                                                        <!-- Name(s) of the constant(s) that is/are affected by the change. -->
                                                        <xs:element name="affecting" type="xs:string"/>
                                                    </xs:sequence>
                                                </xs:complexType>
                                            </xs:element>
                                        </xs:sequence>
                                    </xs:complexType>
                                </xs:element>
                            </xs:sequence>
                            <!-- Set to true activates a JavaScript which makes the table clickable and show a bit mask. See also https://en.wikipedia.org/wiki/Mask_(computing) -->
                            <xs:attribute name="activateBitmask" type="xs:boolean" use="required"/>
                        </xs:complexType>
                    </xs:element>
                </xs:choice>
                <xs:group ref="authorAndDate" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:attribute ref="xml:lang" use="required"/>
        </xs:complexType>
    </xs:element>

    <!-- Object models -->
    <xs:group name="docPart">
        <xs:choice>
            <!-- A section which can contain itself or other HTML elements. Use a <part> for every subtopic on the page.-->
            <xs:element name="part">
                <xs:complexType>
                    <xs:group ref="docPart" maxOccurs="unbounded"/>
                </xs:complexType>
            </xs:element>
            <!-- Section title used on the page. Can be formatted with HTML inline elements. -->
            <xs:element name="h" type="htmlMixedContainsStandardTextFormatElements"/>
            <!-- Multiline text. Can be formatted with HTML elements. -->
            <xs:element name="text" type="htmlText"/>
            <!-- For code examples in C4Script. -->
            <xs:element name="code" type="code"/>
            <xs:element name="dl">
                <xs:complexType mixed="true">
                    <xs:sequence maxOccurs="unbounded">
                        <xs:element name="dt" maxOccurs="5">
                            <xs:complexType mixed="true">
                                <xs:group ref="htmlInlineElements" minOccurs="0" maxOccurs="unbounded"/>
                                <xs:attribute name="id" type="xs:ID"/>
                            </xs:complexType>
                        </xs:element>
                        <xs:element name="dd" maxOccurs="unbounded">
                            <xs:complexType mixed="true">
                                <xs:choice minOccurs="0" maxOccurs="unbounded">
                                    <xs:element name="text" type="htmlText"/>
                                    <xs:element name="code" type="code"/>
                                </xs:choice>
                            </xs:complexType>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="img" type="img"/>
        </xs:choice>
    </xs:group>
    <xs:simpleType name="entityName">
        <xs:restriction base="xs:token">
            <xs:pattern value="(_|\w)(\w|_|\d)+"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="entityGroupName">
        <xs:restriction base="xs:token">
            <xs:pattern value="(_|\w)(\w|_|\d)+\*?"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="functionCategory">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Arithmetik"/>
            <xs:enumeration value="Callbacks/Objekte"/>
            <xs:enumeration value="Callbacks/Szenarien"/>
            <xs:enumeration value="Effekte"/>
            <xs:enumeration value="Entwickler"/>
            <xs:enumeration value="Global"/>
            <!-- TODO rename @maxmitti -->
            <xs:enumeration value="Get*Val"/>
            <xs:enumeration value="Himmel"/>
            <xs:enumeration value="Interface"/>
            <xs:enumeration value="Landschaft"/>
            <xs:enumeration value="Landschaft/Material"/>
            <xs:enumeration value="Musik"/>
            <xs:enumeration value="Nachrichten"/>
            <xs:enumeration value="Objekte"/>
            <xs:enumeration value="Objekte/Aktivität"/>
            <xs:enumeration value="Objekte/Bewegung"/>
            <xs:enumeration value="Objekte/Commands"/>
            <xs:enumeration value="Objekte/Darstellung"/>
            <xs:enumeration value="Objekte/Erzeugung"/>
            <xs:enumeration value="Objekte/Existenz"/>
            <xs:enumeration value="Objekte/Inhalt"/>
            <xs:enumeration value="Objekte/Kategorie"/>
            <xs:enumeration value="Objekte/Komponenten"/>
            <xs:enumeration value="Objekte/Lebewesen"/>
            <xs:enumeration value="Objekte/Mannschaft"/>
            <xs:enumeration value="Objekte/Menü"/>
            <xs:enumeration value="Objekte/OCF"/>
            <xs:enumeration value="Objekte/Position"/>
            <xs:enumeration value="Objekte/Sichtbarkeit"/>
            <xs:enumeration value="Objekte/Status"/>
            <xs:enumeration value="Objekte/Suche"/>
            <xs:enumeration value="Objekte/Vertices"/>
            <xs:enumeration value="Partikel"/>
            <xs:enumeration value="Script"/>
            <xs:enumeration value="Script/Funktionsaufruf"/>
            <xs:enumeration value="Script/Strings"/>
            <xs:enumeration value="Spieler"/>
            <xs:enumeration value="Spieler/Sicht"/>
            <xs:enumeration value="System"/>
            <xs:enumeration value="Teams"/>
            <xs:enumeration value="Umwelt"/>
            <xs:enumeration value="Umwelt/Effekte"/>
            <xs:enumeration value="Umwelt/Wetter"/>
            <xs:enumeration value="Variablen"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="entityVersions">
        <xs:sequence>
            <!-- Version where the subject was introduced (e.g. 1.2.3.4 [999] LC). Format: "1.2.3.4 [987]" followed by one of the following: CP, GWE, CE, CR, LC, C4. -->
            <xs:element name="version" type="clonkVersion"/>
            <!-- Version where the subject was changed or extended (e.g. 1.2.3.4 [999] LC). Format: "1.2.3.4 [987]" followed by one of the following: CP, GWE, CE, CR, LC, C4. -->
            <xs:element minOccurs="0" maxOccurs="unbounded" name="extversion" type="clonkVersion"/>
        </xs:sequence>
    </xs:complexType>
    <xs:simpleType name="clonkVersion">
        <xs:restriction base="xs:token">
            <xs:pattern value="\d{1,2}\.\d{1,2}\.\d{1,2}\.\d{1,2}\s(\[\d{3}\]\s)?(CP|GWE|CE|CR|LC|C4)"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="deprecated">
        <xs:sequence>
            <xs:group ref="authorAndDate"/>
            <!-- Enter Clonk version since deprecated here (e.g. 1.2.3.4 [999] LC). Format: "1.2.3.4 [987]" followed by one of the following: CP, GWE, CE, CR, LC, C4. "unknown" allowed for compatibility reasons -->
            <xs:element name="version" type="clonkVersionOrUnknown"/>
            <!-- Describe why the entity is deprecated.	If you use the <deprecated> element in an unstructured table, please begin with the entity that is deprecated (e.g. "Entityname: reason"). In structured tables like <constGroup> or <func> this is done automatically while building the docs in XSLT and therefore not needed to be done manually.

			Please refer to a still documented new feature. If applicable refer
			* to new functions with <funcLink>NewFunction</funcLink>,
			* to new callback functions with <callbackLink>NewFunction</callbackLink> or
			* to new constants with <constLink constGroup="FOO">FOO_Const1</constLink> -->
            <xs:element name="description" type="htmlText"/>
        </xs:sequence>
    </xs:complexType>
    <xs:simpleType name="clonkVersionOrUnknown">
        <!-- union needed to allow empty values -->
        <xs:union memberTypes="clonkVersion">
            <xs:simpleType>
                <xs:restriction base='xs:string'>
                    <xs:enumeration value="unknown"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>
    <xs:simpleType name="functionParamDataTypes">
        <xs:restriction base="xs:string">
            <xs:enumeration value="bool"/>
            <xs:enumeration value="int"/>
            <xs:enumeration value="any"/>
            <xs:enumeration value="array"/>
            <xs:enumeration value="object"/>
            <xs:enumeration value="map"/>
            <xs:enumeration value="string"/>
            <xs:enumeration value="id"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="examples">
        <xs:sequence>
            <!-- A single example. Use a separate <example> for each example that is provided. In it, you can first use a <code> and then describe the example with a <text>. -->
            <xs:element maxOccurs="unbounded" name="example">
                <xs:complexType>
                    <xs:choice maxOccurs="unbounded">
                        <!-- C4Script codeblock. -->
                        <xs:element name="code" type="code"/>
                        <!-- Multiline text. Can be formatted with HTML elements. -->
                        <xs:element name="text" type="htmlText"/>
                    </xs:choice>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:group name="htmlDocsLinks">
        <xs:choice>
            <!-- To refer to functions. Please use the name of the function file as the filename is used to link to the corresponding HTML file. -->
            <xs:element name="funcLink" type="entityName"/>
            <!-- To refer to doc pages in general. -->
            <xs:element name="emLink">
                <xs:complexType mixed="true">
                    <!-- Relative path from sdk/ with .html extension. Id refs (bar.html#foo) can be used. -->
                    <xs:attribute name="href" use="required"/>
                </xs:complexType>
            </xs:element>
            <!-- To refer to constants. -->
            <xs:element name="constLink">
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="xs:string">
                            <!-- Group where the constant is located in. Please use the name of the constant group file as the filename is used to link to the corresponding HTML file. -->
                            <xs:attribute name='constGroup' type="xs:string" use="required"></xs:attribute>
                        </xs:extension>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <!-- To refer to callback functions. Please use the name of the function file as the filename is used to link to the corresponding HTML file. -->
            <xs:element name="callbackLink" type="entityName"/>
        </xs:choice>
    </xs:group>
    <xs:complexType name="history">
        <xs:sequence>
            <!-- A single change in the change list. Use this for each change that has been done. -->
            <xs:element name="change" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:group ref="generalChangeInformation"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:group name="generalChangeInformation">
        <xs:sequence>
            <xs:group ref="authorAndDate"/>
            <!-- Clonk version where the subject was changed or extended (e.g. 1.2.3.4 [999] LC). Format: "1.2.3.4 [987]" followed by one of the following: CP, GWE, CE, CR, LC, C4. -->
            <xs:element name="version" type="clonkVersion"/>
            <!-- A description what exactly changed. -->
            <xs:element name="description" type="htmlText"/>
        </xs:sequence>
    </xs:group>
    <xs:group name="authorAndDate">
        <xs:sequence>
            <!-- Name of the author. For multiple authors please use separate <author>-elements. -->
            <xs:element name="author">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:minLength value="3"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <!-- Date when the changes of the author were finished. Enter date in format YYYY-MM-DD for example 2022-31-12. -->
            <xs:element name="date">
                <xs:simpleType>
                    <xs:restriction base="xs:token">
                        <!-- YYYY-MM-DD -->
                        <xs:pattern value="20[0-9][0-9]-(0[1-9]|1[0-2])(-([12]\d|0[1-9]|3[01]))?"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
        </xs:sequence>
    </xs:group>

    <!-- HTML stuff -->
    <xs:complexType name="htmlMixedContainsStandardTextFormatElements" mixed="true">
        <xs:group ref="htmlStandardTextFormatElements" minOccurs="0" maxOccurs="unbounded"/>
        <xs:attribute name="id" type="xs:ID"/>
    </xs:complexType>
    <xs:group name="htmlStandardTextFormatElements">
        <xs:choice>
            <xs:element name="b">
                <xs:complexType mixed="true">
                    <xs:group minOccurs="0" maxOccurs="unbounded" ref="htmlInlineElements"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="i">
                <xs:complexType mixed="true">
                    <xs:group minOccurs="0" maxOccurs="unbounded" ref="htmlInlineElements"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="s">
                <xs:complexType mixed="true">
                    <xs:group minOccurs="0" maxOccurs="unbounded" ref="htmlInlineElements"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="u">
                <xs:complexType mixed="true">
                    <xs:group minOccurs="0" maxOccurs="unbounded" ref="htmlInlineElements"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="tt">
                <xs:complexType mixed="true">
                    <xs:group minOccurs="0" maxOccurs="unbounded" ref="htmlInlineElements"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="small">
                <xs:complexType mixed="true">
                    <xs:group minOccurs="0" maxOccurs="unbounded" ref="htmlInlineElements"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="abbr">
                <xs:complexType mixed="true">
                    <xs:group minOccurs="0" maxOccurs="unbounded" ref="htmlInlineElements"/>
                    <xs:attribute name="title" type="xs:string" use="required"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="cite">
                <xs:complexType mixed="true">
                    <xs:group minOccurs="0" maxOccurs="unbounded" ref="htmlInlineElements"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="dfn">
                <xs:complexType mixed="true">
                    <xs:group minOccurs="0" maxOccurs="unbounded" ref="htmlInlineElements"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="em">
                <xs:complexType mixed="true">
                    <xs:group minOccurs="0" maxOccurs="unbounded" ref="htmlInlineElements"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="kbd">
                <xs:complexType mixed="true">
                    <xs:group minOccurs="0" maxOccurs="unbounded" ref="htmlInlineElements"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="strong">
                <xs:complexType mixed="true">
                    <xs:group minOccurs="0" maxOccurs="unbounded" ref="htmlInlineElements"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="samp">
                <xs:complexType mixed="true">
                    <xs:group minOccurs="0" maxOccurs="unbounded" ref="htmlInlineElements"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="var">
                <xs:complexType mixed="true">
                    <xs:group minOccurs="0" maxOccurs="unbounded" ref="htmlInlineElements"/>
                </xs:complexType>
            </xs:element>
        </xs:choice>
    </xs:group>
    <xs:complexType name="htmlMixedContainsInline" mixed="true">
        <xs:group ref="htmlInlineElements" minOccurs="0" maxOccurs="unbounded"/>
        <xs:attribute name="id" type="xs:ID"/>
    </xs:complexType>
    <xs:group name="htmlInlineElements">
        <xs:choice>
            <xs:group ref="htmlDocsLinks"/>
            <xs:group ref="htmlStandardTextFormatElements"/>
            <xs:element name="a">
                <xs:complexType mixed="true">
                    <xs:group minOccurs="0" maxOccurs="unbounded" ref="htmlInlineElements"/>
                    <xs:attribute name="href" use="required" type="xs:anyURI"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="br">
                <xs:complexType/>
            </xs:element>
            <xs:element name="wbr">
                <xs:complexType/>
            </xs:element>
            <xs:element name="hr">
                <xs:complexType/>
            </xs:element>
            <xs:element name="img" type="img"/>
            <xs:element name="map">
                <xs:complexType mixed="true">
                    <xs:sequence>
                        <xs:element name="area">
                            <xs:complexType>
                                <xs:attribute name="shape" type="xs:string" use="required"/>
                                <xs:attribute name="coords" type="xs:string" use="required"/>
                                <xs:attribute name="alt" type="xs:string" use="required"/>
                                <xs:attribute name="href" type="xs:string" use="required"/>
                            </xs:complexType>
                        </xs:element>
                    </xs:sequence>
                    <xs:attribute name="name" type="xs:string" use="required"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="q">
                <xs:complexType mixed="true">
                    <xs:group minOccurs="0" maxOccurs="unbounded" ref="htmlInlineElements"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="span">
                <xs:complexType mixed="true">
                    <xs:group minOccurs="0" maxOccurs="unbounded" ref="htmlInlineElements"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="sub">
                <xs:complexType mixed="true">
                    <xs:group minOccurs="0" maxOccurs="unbounded" ref="htmlInlineElements"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="sup">
                <xs:complexType mixed="true">
                    <xs:group minOccurs="0" maxOccurs="unbounded" ref="htmlInlineElements"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="code" type="code"/>
        </xs:choice>
    </xs:group>
    <xs:complexType name="img">
        <xs:attribute name="src" use="required"/>
        <xs:attribute name="width" default="0"/>
        <xs:attribute name="height" default="0"/>
        <xs:attribute name="id" type="xs:ID"/>
        <xs:attribute name="usemap" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="code" mixed="true">
        <xs:group ref="htmlInlineElements" minOccurs="0" maxOccurs="unbounded"/>
    </xs:complexType>
    <xs:complexType name="htmlText" mixed="true">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="ul">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="li" type="htmlMixedContainsInline" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="table">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="caption" minOccurs="0">
                            <xs:complexType mixed="true">
                                <xs:attribute name="id" type="xs:ID"/>
                            </xs:complexType>
                        </xs:element>
                        <xs:element name="rowh" minOccurs="0">
                            <xs:complexType>
                                <xs:sequence>
                                    <xs:element maxOccurs="unbounded" name="col" type="col"/>
                                </xs:sequence>
                            </xs:complexType>
                        </xs:element>
                        <xs:element name="row" maxOccurs="unbounded">
                            <xs:complexType>
                                <xs:sequence>
                                    <xs:element maxOccurs="unbounded" name="col" type="col"/>
                                    <xs:element minOccurs="0" name="deprecated" type="deprecated"/>
                                </xs:sequence>
                                <xs:attribute name="id" type="xs:ID"/>
                            </xs:complexType>
                        </xs:element>
                    </xs:sequence>
                    <xs:attribute name="activateBitmask" type="xs:boolean" use="required">
                    </xs:attribute>
                    <xs:attribute name="bitmaskName" type="xs:string" use="required"/>
                </xs:complexType>
            </xs:element>
            <xs:group ref="htmlInlineElements"/>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="col" mixed="true">
        <xs:group minOccurs="0" maxOccurs="unbounded" ref="htmlInlineElements"/>
        <xs:attribute name="colspan" type="xs:positiveInteger"/>
    </xs:complexType>
</xs:schema>
