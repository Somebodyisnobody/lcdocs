<?xml version="1.0" encoding="ISO-8859-1" standalone="yes"?>
<?xml-stylesheet type="text/xsl" href="../../clonk.xsl"?>
<clonkDoc xmlns="https://clonkspot.org"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="https://clonkspot.org ../../clonk.xsd" xml:lang="de">
<doc>
<title>Prozeduren</title>
<h id="Prozeduren">Prozeduren</h>

<text>Für Objekt-Aktivitäten bietet die Engine diverse Standardprozeduren an, die verschiedene
typische Verhaltensweisen steuern. Durch die Standardprozedur WALK wechselt z.B. die Aktivität Walk
automatisch nach Jump, sobald der Boden unter den Füßen verloren wurde.</text>
<text>
<table activateBitmask="false" bitmaskName="">
<rowh>
  <col>Prozedur</col>
  <col>Beschreibung</col>
  <col>Verhalten</col>
  <col>CNAT</col>
</rowh><row>
  <col>NONE</col>
  <col>Keine Prozedur</col>
  <col>Nur Schwerkraft oder in der <emLink href="definition/actmap.html">Aktivität</emLink>
festgelegtes Attach.</col>
  <col>[Action] Attach</col>
</row><row>
  <col>WALK</col>
  <col>Laufen</col>
  <col>Nach <emLink href="definition/defcore.html#SektionPhysical">Physical</emLink> Walk und aktueller
<constLink constGroup="COMD"></constLink>.</col>
  <col>CNAT_Bottom</col>
</row><row>
  <col>FLIGHT</col>
  <col>Freier Fall</col>
  <col>Nur Schwerkraft.</col>
  <col>CNAT_None</col>
</row><row>
  <col>KNEEL</col>
  <col>Aufstehen</col>
  <col>Verhalten nach <emLink href="definition/actmap.html">Aktivität</emLink>.</col>
  <col>CNAT_Bottom</col>
</row><row>
  <col>SCALE</col>
  <col>Klettern</col>
  <col>Nach <emLink href="definition/defcore.html#SektionPhysical">Physical</emLink> Scale und aktueller
<constLink constGroup="COMD"></constLink>.</col>
  <col>CNAT_Left/Right</col>
</row><row>
  <col>HANGLE</col>
  <col>Hangeln</col>
  <col>Nach <emLink href="definition/defcore.html#SektionPhysical">Physical</emLink> Hangle und aktueller
<constLink constGroup="COMD"></constLink>.</col>
  <col>CNAT_Top</col>
</row><row>
  <col>DIG</col>
  <col>Graben</col>
  <col>Nach <emLink href="definition/defcore.html#SektionPhysical">Physical</emLink> Dig und aktueller
<constLink constGroup="COMD"></constLink>. Bei
<funcLink>SetActionData</funcLink>=1 wird Material freigegraben.</col>
  <col>CNAT_None</col>
</row><row>
  <col>SWIM</col>
  <col>Schwimmen</col>
  <col>Nach <emLink href="definition/defcore.html#SektionPhysical">Physical</emLink> Swim und aktueller
<constLink constGroup="COMD"></constLink>.</col>
  <col>CNAT_None</col>
</row><row>
  <col>THROW</col>
  <col>Werfen</col>
  <col>Verhalten nach <emLink href="definition/actmap.html">Aktivität</emLink>.</col>
  <col>CNAT_Bottom</col>
</row><row>
  <col>BRIDGE</col>
  <col>Brückenbau</col>
  <col>Nach <constLink constGroup="COMD"></constLink>. Brückenmaterial als Index in
<funcLink>SetActionData</funcLink>.</col>
  <col>CNAT_Bottom</col>
</row><row>
  <col>BUILD</col>
  <col>Bauen</col>
  <col>Baut das Zielobjekt (<funcLink>SetAction</funcLink>()).</col>
  <col>CNAT_Bottom</col>
</row><row>
  <col>PUSH</col>
  <col>Schieben</col>
  <col>Schiebt das Zielobjekt (<funcLink>SetAction</funcLink>()) nach
<emLink href="definition/defcore.html#SektionPhysical">Physical</emLink> Push und
<constLink constGroup="COMD"></constLink>.</col>
  <col>CNAT_Bottom</col>
</row><row>
  <col>CHOP</col>
  <col>Fällen</col>
  <col>Fällt das Zielobjekt (<funcLink>SetAction</funcLink>()) nach
<emLink href="definition/defcore.html#SektionPhysical">Physical</emLink> Chop.</col>
  <col>CNAT_Bottom</col>
</row><row>
  <col>LIFT</col>
  <col>Heben</col>
  <col>Hebt das Zielobjekt (<funcLink>SetAction</funcLink>()) nach
<constLink constGroup="COMD"></constLink>.</col>
  <col>CNAT_None</col>
</row><row>
  <col>FLOAT</col>
  <col>Schweben</col>
  <col>Nach <emLink href="definition/defcore.html#SektionPhysical">Physical</emLink> Float und aktueller
<constLink constGroup="COMD"></constLink>.</col>
  <col>CNAT_None</col>
</row><row>
  <col>ATTACH</col>
  <col>Festhalten</col>
  <col>Richtet Objektposition Vertex a an Vertex b des
    Zielobjekts (<funcLink>SetAction</funcLink>()) aus. a und b sind die beiden niederwertigen Bytes
von <funcLink>SetActionData</funcLink> (Siehe
<funcLink>SetActionData</funcLink> für Beispiel). Erweitert ab CE.</col>
  <col>CNAT_None</col>
</row><row>
  <col>FIGHT</col>
  <col>Kämpfen</col>
  <col>Nach <emLink href="definition/defcore.html#SektionPhysical">Physical</emLink> Fight gegen Zielobjekt (<funcLink>SetAction</funcLink>()).</col>
  <col>CNAT_Bottom</col>
</row><row>
  <col>CONNECT</col>
  <col>Verbinden</col>
  <col>Nur <emLink href="definition/lineconnect.html">Leitungsobjekte</emLink>. Verbindet
    Zielobjekt 1 und Zielobjekt 2 (<funcLink>SetAction</funcLink>()).</col>
  <col>CNAT_None</col>
</row><row>
  <col>PULL</col>
  <col>Ziehen</col>
  <col>Zieht das Zielobjekt (<funcLink>SetAction</funcLink>()) nach
<emLink href="definition/defcore.html#SektionPhysical">Physical</emLink> Push und
<constLink constGroup="COMD"></constLink>.</col>
  <col>CNAT_Bottom</col>
</row></table>
</text>
<text>Prozeduren sind in der Engine fest programmiert und stammen aus alten Zeiten, bevor
entsprechendes Verhalten flexibler auf der Ebene von Aktivitäten und Scripts möglich war. Hinter den
meisten Prozeduren verbirgt sich extrem komplexes Verhalten und sie lassen sich nur in ihrer
ursprünglichen Verwendung in Clonks sinnvoll einsetzen.</text>

</doc><author>Sven2</author><date>2002-04</date>
</clonkDoc>
