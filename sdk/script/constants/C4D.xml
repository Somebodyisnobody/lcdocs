<?xml version="1.0" encoding="ISO-8859-1" standalone="yes"?>
<?xml-stylesheet type="text/xsl" href="../../../clonk.xsl"?>
<clonkDoc xmlns="https://clonkspot.org"
		  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		  xsi:schemaLocation="https://clonkspot.org ../../../clonk.xsd" xml:lang="de">
	<constGroup activateBitmask="true">
		<title>Objektkategorien (C4D)</title>
		<description>Konstanten zum Setzen oder Abrufen von Kategorien eines Objektes.
			Verwendet werden diese Konstanten mit <funcLink>GetCategory</funcLink> und <funcLink>SetCategory</funcLink>.
			Die Kategorie eines Objekts ist eine DWord-Bitmaske, die sich aus den folgenden Werten zusammen setzt. Die ersten 5 Kategorien erlauben keine Kombination, von den Bits 0-4 darf und muss immer genau eines zu jeder Zeit gesetzt sein.<br/>
			Die in 4.6.5.0 CP eingeführte <code>C4D_All</code> Konstante steht für "alle Kategorien" und kann etwa für Filterfunktionen verwendet werden. Nicht gelistete Konstanten, die jedoch in <emLink
					href="definition/category.html">DefCore.txt Kategorien</emLink> stehen, können über <funcLink>SetCategory</funcLink> mit dem entsprechenden Zahlenwert gesetzt werden.
		</description>
		<const bitPos="1">
			<name>C4D_StaticBack</name>
			<category>Objekte/Kategorie</category>
			<description>Unbewegliche Hintergrundobjekte.</description>
			<version>4.6.5.0 CP</version>
			<value>1</value>
		</const>
		<const bitPos="2">
			<name>C4D_Structure</name>
			<category>Objekte/Kategorie</category>
			<description>Gebäude.</description>
			<version>4.6.5.0 CP</version>
			<value>2</value>
		</const>
		<const bitPos="3">
			<name>C4D_Vehicle</name>
			<category>Objekte/Kategorie</category>
			<description>Fahrzeuge.</description>
			<version>4.6.5.0 CP</version>
			<value>4</value>
		</const>
		<const bitPos="4">
			<name>C4D_Living</name>
			<category>Objekte/Kategorie</category>
			<description>Lebewesen.</description>
			<version>4.6.5.0 CP</version>
			<value>8</value>
		</const>
		<const bitPos="5">
			<name>C4D_Object</name>
			<category>Objekte/Kategorie</category>
			<description>Kleine Objekte/Gegenstände.</description>
			<version>4.6.5.0 CP</version>
			<value>16</value>
		</const>
		<const bitPos="6">
			<name>C4D_Goal</name>
			<category>Objekte/Kategorie</category>
			<description>Spielziele.</description>
			<version>4.6.5.0 CP</version>
			<value>32</value>
		</const>
		<const bitPos="7">
			<name>C4D_Environment</name>
			<category>Objekte/Kategorie</category>
			<description>Umweltsteuerungsobjekte.</description>
			<version>4.9.5.0 CE</version>
			<value>64</value>
		</const>
		<const bitPos="11">
			<name>C4D_Knowledge</name>
			<category>Objekte/Kategorie</category>
			<description>Baupläne. Für das Menüsystem Auswahl herstellbare Objekte.</description>
			<version>4.6.5.0 CP</version>
			<value>1024</value>
		</const>
		<const bitPos="18">
			<name>C4D_Magic</name>
			<category>Objekte/Kategorie</category>
			<description>Zauber. Als Zahlenwert durch die Engine schon ab 4.9.1.0 GWE interpretierbar</description>
			<version>4.9.5.0 CE</version>
			<value>131072</value>
		</const>
		<const bitPos="20">
			<name>C4D_Rule</name>
			<category>Objekte/Kategorie</category>
			<description>Spielregeln.</description>
			<version>4.6.5.0 CP</version>
			<value>524288</value>
		</const>
		<const bitPos="21">
			<name>C4D_Background</name>
			<category>Objekte/Kategorie</category>
			<description>Wird hinter der Landschaft gezeichnet. Nützlich beispielsweise für Effektobjekte wie Wolken oder Himmelskörper. Diese Kategorie funktioniert nicht im 8-Bit-Grafiksystem.</description>
			<version>4.9.1.0 GWE</version>
			<value>1048576</value>
		</const>
		<const bitPos="22">
			<name>C4D_Parallax</name>
			<category>Objekte/Kategorie</category>
			<description>
				Bewegt sich parallax zum Rest der Landschaft. Das bedeutet, dass sich die scheinbare Objektposition je nach Scrollposition des Viewports ändert. Damit können beispielsweise Objekte scheinbar in den Hintergrund geschoben, oder Statusanzeigen realisiert werden.<br/>
				Die parallaxe Verschiebung wird dabei prozentual zum Normalverhalten in den ersten beiden indizierten, lokalen Variablen (siehe <funcLink>Local</funcLink>()) des Objekts angegeben (Local(0) und Local(1) jeweils für die horizontale respektive vertikale Verschiebung). Das heißt, um das Normalverhalten zu erzielen, müssen diese Werte jeweils auf 100 gesetzt werden. Stehen sie auf 0, gleicht die Objektposition der Sichtfensterposition. Für Hintergrundparallaxität werden also gewöhnlich Werte zwischen 0 und 100 gewählt.<br/>
				Um Objekte direkt am Sichtfenster des Spielers zu positionieren, um so zum Beispiel Statusanzeigen zu realisieren, können Local(0) und Local(1) auf 0 gesetzt werden. Die Objektposition ist dann immer relativ zur oberen linken Ecke des Sichtfensters. Ab CR können für die Position solcher Objekte auch negative Werte angegeben werden: Diese werden dann jeweils vom rechten bzw. unteren Rand des Sichtfensters gerechnet. Auf diese Weise lassen sich Statusanzeigen auch am rechten oder unteren Rand der Sichtfenster platzieren.<br/>
				Siehe auch: <funcLink>SetSkyParallax</funcLink>.
			</description>
			<version>4.9.1.0 GWE</version>
			<value>2097152</value>
		</const>
		<const bitPos="23">
			<name>C4D_MouseSelect</name>
			<category>Objekte/Kategorie</category>
			<!-- TODO <callbacklink> to callback when documented-->
			<description>Objekt lässt sich anklicken; Klick löst Callback aus (MouseSelection(int iPlr)-Callback im Objekt).</description>
			<version>4.9.5.0 CE</version>
			<value>4194304</value>
		</const>
		<const bitPos="24">
			<name>C4D_Foreground</name>
			<category>Objekte/Kategorie</category>
			<description>Objekt wird im Vordergrund normaler Objekte gerendert.</description>
			<version>4.9.5.0 CE</version>
			<value>8388608</value>
		</const>
		<const bitPos="25">
			<name>C4D_MouseIgnore</name>
			<category>Objekte/Kategorie</category>
			<description>Objekt ist nicht mit der Maus anwählbar.</description>
			<version>4.9.5.0 CE</version>
			<value>16777216</value>
		</const>
		<const bitPos="26">
			<name>C4D_IgnoreFoW</name>
			<category>Objekte/Kategorie</category>
			<description>Objekt ist auch innerhalb von FoW komplett sichtbar, d.h. es wird auch dann gezeichnet, wenn es eigentlich vom Kriegsnebel bedeckt ist. Nützlich beispielsweise für Statusanzeigen und Kontrollelemente.</description>
			<version>4.9.6.0 CR</version>
			<value>33554432</value>
		</const>
		<examples>
			<example>
				<code><funcLink>SetCategory</funcLink>(C4D_StaticBack, this());</code>
				<text>Macht das Objekt zu einem Hintergrundobjekt. Wird z. B. bei Burgteilen verwendet, damit davor gebaut werden kann.</text>
			</example>
			<example>
				<code><funcLink>GetPlrKnowledge</funcLink>(0, 0, 0, C4D_Structure);</code>
				<text>Liefert das erste Gebäude zurück, das der 1. Spieler bauen kann.</text>
			</example>
			<example>
				<code><funcLink>GetDefinition</funcLink>(0, C4D_Object);</code>
				<text>Liefert die ID des ersten geladenen Objekts zurück. Ein ähnlicher Code wird vom Forschungslabor benutzt, um die erforschbaren Objekte aufzulisten.</text>
			</example>
			<example>
				<code>
var obj;
while (obj=<funcLink>FindObject</funcLink>(0, 0, 0, 0, 0, 0, 0, 0, 0, obj))
if (<funcLink>GetCategory</funcLink>(obj) <emLink href="script/operatoren.html">&amp;</emLink> C4D_Goal)
<funcLink>RemoveObject</funcLink>(obj);
				</code>
				<text>Entfernt alle Spielziele. Mit einem bitweisen AND kann man überprüfen, ob zwei Kategorien in mindestens einer Kategorie übereinstimmen.</text>
			</example>
			<example>
				<code><funcLink>if</funcLink>(<funcLink>GetCategory</funcLink>( 0, <funcLink>GetHomebaseMaterial</funcLink>()) <emLink href="script/operatoren.html">&amp;</emLink> C4D_Knowledge) <funcLink>Message</funcLink>("Spieler 1 kann etwas kaufen, was er auch erforschen oder bauen könnte.");</code>
				<text>Mit einem bitweisen AND kann man überprüfen, ob zwei Kategorien in mindestens einer Kategorie übereinstimmen.</text>
			</example>
			<example>
				<code>
for(var obj in <funcLink>FindObjects</funcLink>(<funcLink>Find_Category</funcLink>(C4D_Rule)))
<funcLink>RemoveObject</funcLink>(obj);</code>
				<text>Entfernt alle Spielregeln. :-)</text>
			</example>
			<example>
				<code><funcLink>SetCategory</funcLink>(<funcLink>GetCategory</funcLink>() | C4D_Background);</code>
				<text>Versetzt das aufrufende Objekt in den Hintergrund.</text>
			</example>
			<example>
				<code>
<funcLink>SetCategory</funcLink>(<funcLink>GetCategory</funcLink>() | C4D_Parallax | C4D_Background);
<funcLink>Local</funcLink>()=50; <funcLink>Local</funcLink>(1)=100;</code>
				<text>Versetzt das aufrufende Objekt in den Hintergrund, und gibt ihm horizontale Parallaxität.</text>
			</example>
		</examples>
		<history>
			<change>
				<author>Sven2</author>
				<date>2002-01</date>
				<version>4.6.5.0 CP</version>
				<description>Einführung C4D-Gruppe.</description>
				<affecting>C4D_All, C4D_Goal</affecting>
			</change>
			<change>
				<author>Günther</author>
				<date>2002-02</date>
				<version>4.6.5.0 CP</version>
				<description>Konstanten ergänzt.</description>
				<affecting>C4D_Living, C4D_Object, C4D_Knowledge</affecting>
			</change>
			<change>
				<author>jwk</author>
				<date>2002-04</date>
				<version>4.6.5.0 CP</version>
				<description>Konstanten ergänzt.</description>
				<affecting>C4D_StaticBack, C4D_Structure, C4D_Vehicle, C4D_Rule</affecting>
			</change>
			<change>
				<author>Sven2</author>
				<date>2003-06</date>
				<version>4.9.1.0 GWE</version>
				<description>Konstanten ergänzt.</description>
				<affecting>C4D_Background, C4D_Parallax</affecting>
			</change>
			<change>
				<author>Funni</author>
				<date>2022-09-15</date>
				<version>4.9.5.0 CE</version>
				<description>Konstanten ergänzt und anhand der Releaselogs und z.B. Clonk Endeavour Doku einer Version zugeordnet. Eventuell wurden die Konstanten schon vorher implementiert. Hinweis: Die genaue Releaseversion von CE ist unklar, da die Informationen, die aus den Releaselogs stammen, lediglich die Einführung der Konstanten als Gamekonstanten, nicht als Scriptkonstanten beschreiben.</description>
				<affecting>C4D_MouseSelect, C4D_Foreground, C4D_MouseIgnore, C4D_Magic, C4D_Environment</affecting>
			</change>
			<change>
				<author>Funni</author>
				<date>2022-09-15</date>
				<version>4.9.6.0 CR</version>
				<description>Wurde zumindest als Gamekonstante in der NET2-Engine, welche später zu Clonk Rage umbenannt wurde, hinzugefügt.</description>
				<affecting>C4D_IgnoreFoW</affecting>
			</change>
		</history>
	</constGroup>
	<author>Sven2</author><date>2003-06</date>
	<author>Günther</author><date>2002-02</date>
	<author>jwk</author><date>2002-04</date>
	<author>DerTod</author><date>2022-09-15</date>
	<author>Funni</author><date>2022-09-15</date>
</clonkDoc>
