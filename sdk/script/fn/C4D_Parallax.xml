<?xml version="1.0" encoding="ISO-8859-1" standalone="yes"?>
<?xml-stylesheet type="text/xsl" href="../../../clonk.xsl"?>
<clonkDoc xmlns="https://clonkspot.org"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="https://clonkspot.org ../../../clonk.xsd" xml:lang="de">
	<func>
		<title>C4D_Parallax</title>
		<category>Objekte/Kategorie</category>
		<versions><version>4.9.1.0 GWE</version></versions>
		<syntax>
			<rtype>int</rtype>
		</syntax>
		<desc>
			Objektkategorie: Bewegt sich parallax zum Rest der Landschaft. Das bedeutet, dass sich die scheinbare Objektposition je nach Scrollposition des Viewports ändert. Damit können beispielsweise Objekte scheinbar in den Hintergrund geschoben, oder Statusanzeigen realisiert werden.<br />
			Die parallaxe Verschiebung wird dabei prozentual zum Normalverhalten in den ersten beiden indizierten, lokalen Variablen (siehe <funclink>Local</funclink>()) des Objekts angegeben (Local(0) und Local(1) jeweils für die horizontale respektive vertikale Verschiebung). Das heißt, um das Normalverhalten zu erzielen, müssen diese Werte jeweils auf 100 gesetzt werden. Stehen sie auf 0, gleicht die Objektposition der Sichtfensterposition. Für Hintergrundparallaxität werden also gewöhnlich Werte zwischen 0 und 100 gewählt.<br />
Um Objekte direkt am Sichtfenster des Spielers zu positionieren, um so zum Beispiel Statusanzeigen zu realisieren, können Local(0) und Local(1) auf 0 gesetzt werden. Die Objektposition ist dann immer relativ zur oberen linken Ecke des Sichtfensters. Ab CR können für die Position solcher Objekte auch negative Werte angegeben werden: Diese werden dann jeweils vom rechten bzw. unteren Rand des Sichtfensters gerechnet. Auf diese Weise lassen sich Statusanzeigen auch am rechten oder unteren Rand der Sichtfenster platzieren.
		</desc>
		<remark>Dieser Wert ist als Engine-Konstante definiert. Die Funktionsklammern können daher optional weggelassen werden.</remark>
		<examples>
			<example>
<code><funclink>SetCategory</funclink>(<funclink>GetCategory</funclink>() | C4D_Parallax() | <funclink>C4D_Background</funclink>());
<funclink>Local</funclink>()=50; <funclink>Local</funclink>(1)=100;
</code>
				<text>Versetzt das aufrufende Objekt in den Hintergrund, und gibt ihm horizontale Parallaxität.</text>
			</example>
		</examples>
		<related>
			<funclink>GetCategory</funclink>
			<funclink>SetCategory</funclink>
			<funclink>GetDefinition</funclink>
			<funclink>C4D_Background</funclink>
			<funclink>SetSkyParallax</funclink>
		</related>
	</func>
	<author>Sven2</author><date>2003-06</date>
</clonkDoc>
