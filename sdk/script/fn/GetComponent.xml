<?xml version="1.0" encoding="ISO-8859-1" standalone="yes"?>
<?xml-stylesheet type="text/xsl" href="../../../clonk.xsl"?>
<clonkDoc xmlns="https://clonkspot.org"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="https://clonkspot.org ../../../clonk.xsd" xml:lang="de">
    <func isAsync="false">
        <title>GetComponent</title>
        <category>Objekte/Komponenten</category>
        <versions>
            <version>4.6.5.0 CP</version>
        </versions>
        <syntax>
            <rtype isReference="false">id</rtype>
            <params>
                <param isReference="false" isOptional="true">
                    <type>id</type>
                    <name>idComponent</name>
                    <desc>Objektkomponente, dessen Menge zurückgeliefert werden soll. Wenn 0, wird iIndex benutzt und
                        eine Objektkomponente zurückgegeben.
                    </desc>
                </param>
                <param isReference="false" isOptional="true">
                    <type>int</type>
                    <name>iIndex</name>
                    <desc>Index der zurückzuliefernden Komponente. Dieser Parameter wird ignoriert, wenn idComponent
                        angegeben ist. Ansonsten wird eine ID der Komponente zurückgegeben, dessen Menge in einem
                        darauffolgenden GetComponent-Aufruf ermittelt werden kann.
                    </desc>
                </param>
                <param isReference="false" isOptional="true">
                    <type>object</type>
                    <name>pObj</name>
                    <desc>Objekt dessen Komponenten abgefragt werden sollen. 0 bei lokalem Aufruf. Wenn stattdessen eine
                        idDef angegeben ist, wird dieser Parameter ignoriert.
                    </desc>
                </param>
                <param isReference="false" isOptional="true">
                    <type>id</type>
                    <name>idDef</name>
                    <desc>Definition, von der die Komponenten abgefragt werden sollen. Wenn 0, wird stattdessen in pObj
                        bzw. dem aufrufenden Objekt abgefragt.
                    </desc>
                </param>
            </params>
        </syntax>
        <desc>Liefert Objektkomponenten.</desc>
        <examples>
            <example>
                <code>var i,cid,num;
                    <funcLink>while</funcLink>
                    (id = GetComponent(0, i++, 0, <funcLink>GetID</funcLink>()))
                    if ((num = GetComponent(id) - GetComponent(id, 0, 0, <funcLink>GetID</funcLink>())) > 0)
                    <funcLink>while</funcLink>
                    (num--) <funcLink>CreateObject</funcLink>(id, 0, 0, <funcLink>GetOwner</funcLink>());
                </code>
                <text>Erzeugt alle Komponenten, die dem aufrufenden Objekt noch fehlen (z.B. bei einer Baustelle),
                    direkt vor selbigem.
                </text>
            </example>
        </examples>
        <related>
            <funcLink>SetComponent</funcLink>
            <funcLink>Split2Components</funcLink>
        </related>
    </func>
    <author>Cucaracha</author>
    <date>2002-05</date>
</clonkDoc>

