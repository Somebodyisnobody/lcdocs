<?xml version="1.0" encoding="ISO-8859-1" standalone="yes"?>
<?xml-stylesheet type="text/xsl" href="../../../clonk.xsl"?>
<clonkDoc xmlns="https://clonkspot.org"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="https://clonkspot.org ../../../clonk.xsd" xml:lang="de">
	<func>
		<title>Resort</title>
		<category>Objekte</category><subcat>Position</subcat>
		<versions><version>4.9.1.0 GWE</version></versions>
		<syntax>
			<rtype>void</rtype>
			<params>
				<param><type>object</type><name>pObj</name><desc>Objekt, das neu einsortiert werden soll. 0 bei lokalem Aufruf. Bei 0 im globalen Aufruf wird die gesamte Objektliste neu sortiert (Zur Behebung von Sortierungsfehlern).</desc><optional /></param>
			</params>
		</syntax>
		<desc>Sortiert ein Objekt neu in die Objektliste ein.</desc>
		<remark>Objekte werden primär nach den Hauptkategorien (C4D_StaticBack bis C4D_Object), und sekundär nach ihrer Definition sortiert (erstmals auftauchende Definitionen kommen ans Ende, werden also ganz oben gezeichnet). Bei C4D_StaticBack-Objekten entfällt die Sortierung nach Definition.<br />Die Sortierung findet intern erst am Ende des Frames statt.</remark>
		<examples>
			<example>

<code>var obj;
<funclink>while</funclink> (obj = <funclink>FindObject</funclink>(ELEC, 0,0,0,0, 0, 0,0, 0, obj))
  Resort(obj);</code>
				<text>Sorgt dafür, dass sich alle Fahrstuhlkörbe vor allen anderen Gebäuden befinden.</text>
			</example>
		</examples>
		<related>
			<funclink>ResortObjects</funclink>
			<funclink>SetObjectOrder</funclink>
		</related>
	</func>
	<author>Sven2</author><date>2003-05</date>
</clonkDoc>
