<?xml version="1.0" encoding="ISO-8859-1" standalone="yes"?>
<?xml-stylesheet type="text/xsl" href="../../../clonk.xsl"?>
<clonkDoc xmlns="https://clonkspot.org"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="https://clonkspot.org ../../../clonk.xsd" xml:lang="de">
  <func>
    <title>GetPath</title>
    <category>Landschaft</category>
    <versions><version>4.9.10.7 [334] LC</version></versions>
    <syntax>
      <rtype>map</rtype>
      <params>
        <param>
          <type>int</type>
          <name>iFromX</name>
          <desc>X-Koordinate der Startposition</desc>
        </param>
        <param>
          <type>int</type>
          <name>iFromY</name>
          <desc>Y-Koordinate der Startposition</desc>
        </param>
        <param>
          <type>int</type>
          <name>iToX</name>
          <desc>X-Koordinate der Zielposition</desc>
        </param>
        <param>
          <type>int</type>
          <name>iToY</name>
          <desc>Y-Koordinate der Zielposition</desc>
        </param>
      </params>
    </syntax>

    <desc>Sucht mittels des auch für die Clonk-Wegfindung benutzten Algorithmus
          einen Weg zwischen zwei Punkten der Landschaft und gibt eine Map mit
          Wegpunkten und Länge zurück. Wird kein Weg gefunden, wird nil zurückgegeben.
          Die zurückgegebene Map hat folgende Struktur:
          <table activateBitmask="false" bitmaskName="">
            <rowh><col>Schlüssel</col><col>Datentyp</col><col>Beschreibung</col></rowh>
            <row><col>Length</col><col>int</col><col>Länge des gefundenen Weges, wie bei <funcLink>GetPathLength</funcLink></col></row>
            <row><col>Waypoints</col><col>array</col><col>Array mit Wegpunkten</col></row>
          </table>

          Die Wegpunkte haben dabei folgende Struktur:
          <table activateBitmask="false" bitmaskName="">
            <rowh><col>Schlüssel</col><col>Datentyp</col><col>Beschreibung</col></rowh>
              <row><col>X</col><col>int</col><col>X-Koordinate des Wegpunkts</col></row>
              <row><col>Y</col><col>int</col><col>Y-Koordinate des Wegpunkts</col></row>
              <row><col>TransferTarget</col><col>object</col><col>Transferzielobjekt. nur gesetzt, falls vorhanden.</col></row>
          </table>
   </desc>
   <remark>Diese Funktion kann aufgrund der Mapsyntax nur ab #strict 3 verwendet werden. In älteren Versionen kann <funcLink>GetPathLength</funcLink> verwendet werden.</remark>

    <examples>
      <example>
        <code>var path = GetPath(<funcLink>GetX</funcLink>(), <funcLink>GetY</funcLink>(), <funcLink>GetX</funcLink>(<funcLink>FindBase</funcLink>(<funcLink>GetOwner</funcLink>())), <funcLink>GetY</funcLink>(<funcLink>FindBase</funcLink>(<funcLink>GetOwner</funcLink>())));
<funcLink>if</funcLink> (path)
{
    <funcLink>Log</funcLink>("Anzahl der Wegpunkte: %d, Pfadlänge: %d", <funcLink>GetLength</funcLink>(path.Waypoints), path.Length);
}
else
{
    <funcLink>Log</funcLink>("Kein Pfad gefunden!");
}
        </code>
        <text>Loggt die Anzahl der Wegpunkte und die Pfadlänge zur ersten Basis des Besitzers des aufrufenden Objekts, falls ein Weg gefunden wurde.</text>
      </example>
    </examples>
    <related>
        <funcLink>GetPathLength</funcLink>
    </related>
  </func>
  <author>Fulgen</author><date>2019-10</date>
</clonkDoc>
