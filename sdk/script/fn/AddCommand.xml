<?xml version="1.0" encoding="ISO-8859-1" standalone="yes"?>
<?xml-stylesheet type="text/xsl" href="../../../clonk.xsl"?>
<clonkDoc xmlns="https://clonkspot.org"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="https://clonkspot.org ../../../clonk.xsd" xml:lang="de">
    <func isAsync="false">
        <title>AddCommand</title>
        <category>Objekte/Commands</category>
        <versions>
            <version>4.6.5.0 CP</version>
            <extversion>4.9.1.0 GWE</extversion>
            <extversion>4.9.5.0 CE</extversion>
        </versions>
        <syntax>
            <rtype isReference="false">bool</rtype>
            <params>
                <param isReference="false" isOptional="false">
                    <type>object</type>
                    <name>pObj</name>
                    <desc>Objekt, dem das Kommando gegeben wird.</desc>
                </param>
                <param isReference="false" isOptional="false">
                    <type>string</type>
                    <name>szCommand</name>
                    <desc>Kommandoname (als String). Siehe untere Tabelle</desc>
                </param>
                <param isReference="false" isOptional="true">
                    <type>object</type>
                    <name>pTarget</name>
                    <desc>Zielobjekt für Aktion</desc>
                </param>
                <param isReference="false" isOptional="true">
                    <type>int</type>
                    <name>iX</name>
                    <desc>X-Zielkoordinate</desc>
                </param>
                <param isReference="false" isOptional="true">
                    <type>int</type>
                    <name>iY</name>
                    <desc>Y-Zielkoordinate</desc>
                </param>
                <param isReference="false" isOptional="true">
                    <type>object</type>
                    <name>pTarget2</name>
                    <desc>zweites Zielobjekt</desc>
                </param>
                <param isReference="false" isOptional="true">
                    <type>int</type>
                    <name>iInterval</name>
                    <desc>Zeit (in Ticks/Frames), bis das Kommando abgebrochen wird (es wird dann mit dem nachsten in
                        der Kommandoliste fortgesetzt)
                    </desc>
                </param>
                <param isReference="false" isOptional="true">
                    <type>any</type>
                    <name>Data</name>
                    <desc>zusätzliche Daten zur Aktion</desc>
                </param>
                <param isReference="false" isOptional="true">
                    <type>int</type>
                    <name>iRetries</name>
                    <desc>Anzahl der Wiederholungen (wenn das Kommando fehlschlägt), bis das Kommando abgebrochen
                        wird.
                    </desc>
                </param>
                <param isReference="false" isOptional="true">
                    <type>int</type>
                    <name>iBaseMode</name>
                    <desc>Bestimmt, wie beim Fehlschlag des Commands verfahren wird.
                        <br/>
                        <br/>
                        <table activateBitmask="false" bitmaskName="">
                            <rowh>
                                <col>iBaseMode</col>
                                <col>Name</col>
                                <col>Beschreibung</col>
                                <col>Fehlschlagsmeldung und CallFailed-Aufrufe</col>
                                <col>Nächster Befehl</col>
                            </rowh>
                            <row>
                                <col>0</col>
                                <col>C4CMD_SilentSub</col>
                                <col>Stiller Unterbefehl</col>
                                <col>Nur wenn dies der letzte Befehl ist</col>
                                <col>Schlägt fehl</col>
                            </row>
                            <row>
                                <col>3</col>
                                <col>C4CMD_Sub</col>
                                <col>Unterbefehl</col>
                                <col>Wenn der nächste Befehl keine Wiederholungen mehr hat oder dies der letzte Befehl
                                    ist
                                </col>
                                <col>Schlägt fehl</col>
                            </row>
                            <row>
                                <col>2</col>
                                <col>C4CMD_SilentBase</col>
                                <col>Stiller Basisbefehl</col>
                                <col>Nie</col>
                                <col>Schlägt nicht fehl</col>
                            </row>
                            <row>
                                <col>1</col>
                                <col>C4CMD_Base</col>
                                <col>Basisbefehl</col>
                                <col>Immer</col>
                                <col>Schlägt nicht fehl</col>
                            </row>
                        </table>
                    </desc>
                </param>
            </params>
        </syntax>

        <desc>Fügt ein Kommado in die Kommandoliste eines Objekts hinzu (an den Anfang, siehe auch <funcLink>
            AppendCommand</funcLink>). D.h. es wird ein Kommando hinzugefügt, welches das Objekt vor anderen vorher
            gegebenen Kommandos auszuführen hat (war vorher kein Kommando gesetzt, so entspricht AddCommand <funcLink>
                SetCommand</funcLink>)
            <br/>
            Für Kommando-Beschreibungen siehe
            <funcLink>SetCommand</funcLink>
        </desc>
        <remark>
            Mit AddCommand hinzugefügte Befehle werden nicht an gesteuerte Fahrzeuge weitergeleitet (siehe
            VehicleControl)
        </remark>
        <examples>
            <example>
                <code>Timer:
                    var obj = <funcLink>FindObject</funcLink>(0, -20, -40, 40, 40, <constLink constGroup="OCF">OCF_CrewMember</constLink>;
                    if(obj)
                    if(<funcLink>GetComDir</funcLink>(obj) == <constLink constGroup="COMD">COMD_Right</constLink>)
                    <funcLink>AddCommand</funcLink>(obj, "Jump");
                    return();
                </code>
                <text>
                    Dieser Timer-Script bewirkt (aus einem Objekt aufgerufen, welches auf dem Boden liegt), dass jeder
                    Clonk, der über das Objekt von links nach rechts hinübergeht, springt. Dazu wird erst ein Clonk
                    (bzw. CrewMember) über dem Objekt gesucht. Wurde ein solcher gefunden, und läuft er im Moment nach
                    rechts (ComDir), so wird dem Clonk das Kommando "Jump" hinzugefügt.
                    Das besondere an dem Script ist, dass die alte Befehlskette nicht angetastet wird; der Clonk wird
                    nachdem er gesprungen hat seine Befehlskette weiter verarbeiten.
                    <br/>
                    Mithilfe dieses Script kann man einem Clonk z.B. beibringen, an einer bestimmten Stelle automatisch
                    über einen Abgrund zu hüpfen.
                </text>
            </example>
        </examples>
        <related>
            <funcLink>SetCommand</funcLink>
            <funcLink>GetCommand</funcLink>
            <funcLink>AppendCommand</funcLink>
            <funcLink>FinishCommand</funcLink>
            <funcLink>PlayerObjectCommand</funcLink>
        </related>
    </func>
    <author>PeterW</author>
    <date>2001-11</date>
    <author>Günther</author>
    <date>2005-01</date>
</clonkDoc>
