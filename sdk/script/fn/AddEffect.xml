<?xml version="1.0" encoding="ISO-8859-1" standalone="yes"?>
<?xml-stylesheet type="text/xsl" href="../../../clonk.xsl"?>
<clonkDoc xmlns="https://clonkspot.org"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="https://clonkspot.org ../../../clonk.xsd" xml:lang="de">
  <func isAsync="false">
    <title>AddEffect</title>
    <category>Effekte</category>
    <versions><version>4.9.5.0 CE</version></versions>
    <syntax>
      <rtype isReference="false">int</rtype>
      <params>
        <param isReference="false" isOptional="false">
          <type>string</type>
          <name>szEffectName</name>
          <desc>Name des Effektes ohne vorangestelltes Fx.</desc>
        </param>
        <param isReference="false" isOptional="true">
          <type>object</type>
          <name>pTarget</name>
          <desc>Zielobjekt für den Effekt. Bei 0 wird der Effekt global erzeugt.</desc>
        </param>
        <param isReference="false" isOptional="false">
          <type>int</type>
          <name>iPrio</name>
          <desc>Priorität für den Effekt. Achtung: Die Priorität darf nicht 0 sein; ansonsten wird der Effekt nicht erzeugt!</desc>
        </param>
        <param isReference="false" isOptional="true">
          <type>int</type>
          <name>iTimerIntervall</name>
          <desc>Intervall, in dem Timer-Aufrufe getätigt werden. Bei 0 werden keine Timer-Aufrufe durchgeführt, und der Effekt bleibt permanent bis er durch anderweitige Aufrufe entfernt wird.</desc>
        </param>
        <param isReference="false" isOptional="true">
          <type>object</type>
          <name>pCmdTarget</name>
          <desc>Befehlsziel. Wenn angegeben, werden alle Callbacks in diesem Objekt ausgeführt. Ansonsten finden diese Callbacks grundsätzlich ohne Objektkontext statt. Wenn das Befehlszielobjekt gelöscht wird, werden alle verbundenen Effekte ohne weitere Callbacks ebenfalls gelöscht. Falls das Befehlsziel seine Definition ändert, sollten verbundene Effekte mit <funcLink>ChangeEffect</funcLink> ihre Funktionen neu zuweisen lassen.</desc>
        </param>
        <param isReference="false" isOptional="true">
          <type>id</type>
          <name>idCmdTarget</name>
          <desc>Definition, in der bei nicht angegebenem Befehlsziel-Objekt Callbacks ausgeführt werden. Sind sowohl pCmdTarget als auch idCmdTarget 0, werden die Aufrufe global durchgeführt. Das heißt, die Fx*-Funktionen müssen als global deklariert sein, oder Enginefunktionen sein.</desc>
        </param>
        <param isReference="false" isOptional="true">
          <type>any</type>
          <name>var1</name>
          <desc>Erster Zusatzparameter, der an Fx*Start- und Fx*Effect-Callbacks übergeben wird</desc>
        </param>
        <param isReference="false" isOptional="true">
          <type>any</type>
          <name>var2</name>
          <desc>Zweiter Zusatzparameter, der an Fx*Start- und Fx*Effect-Callbacks übergeben wird</desc>
        </param>
        <param isReference="false" isOptional="true">
          <type>any</type>
          <name>var3</name>
          <desc>Dritter Zusatzparameter, der an Fx*Start- und Fx*Effect-Callbacks übergeben wird</desc>
        </param>
        <param isReference="false" isOptional="true">
          <type>any</type>
          <name>var4</name>
          <desc>Vierter Zusatzparameter, der an Fx*Start- und Fx*Effect-Callbacks übergeben wird</desc>
        </param>
      </params>
    </syntax>

    <desc>Erzeugt einen Effekt. Rückgabewert ist der Effektindex bei Erfolg, oder 0 bei Fehlschlag (weil der Effekt beispielsweise abgelehnt wurde). Wenn der Effekt von einem anderen Effekt aufgenommen wurde, der sich in demselben Aufruf entfernt, wird -2 zurückgegeben.</desc>

    <remark>Für Beispiele und weitere Hinweise siehe <emLink href="script/Effects.html">Effekte-Dokumentation</emLink>.</remark>

    <related>
      <emLink href="script/Effects.html">Effekte-Dokumentation</emLink>
      <funcLink>ChangeEffect</funcLink>
      <funcLink>CheckEffect</funcLink>
      <funcLink>GetEffectCount</funcLink>
      <funcLink>EffectCall</funcLink>
      <funcLink>EffectVar</funcLink>
      <funcLink>GetEffect</funcLink>
      <funcLink>RemoveEffect</funcLink>
    </related>
  </func>
  <author>Sven2</author><date>2004-03</date>
</clonkDoc>
