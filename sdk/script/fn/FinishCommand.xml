<?xml version="1.0" encoding="ISO-8859-1" standalone="yes"?>
<?xml-stylesheet type="text/xsl" href="../../../clonk.xsl"?>
<clonkDoc xmlns="https://clonkspot.org"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="https://clonkspot.org ../../../clonk.xsd" xml:lang="de">
  <func isAsync="false">
    <title>FinishCommand</title>
    <category>Objekte/Commands</category>
    <versions><version>4.9.5.0 CE</version></versions>
    <syntax>
      <rtype isReference="false">bool</rtype>
      <params>
        <param isReference="false" isOptional="false">
          <type>object</type>
          <name>pObj</name>
          <desc>Objekt, dessen Kommando beendet wird.</desc>
        </param>
        <param isReference="false" isOptional="false">
          <type>bool</type>
          <name>fSuccess</name>
          <desc>Ob das Kommando als erfolgreich gewertet werden soll.</desc>
        </param>
        <param isReference="false" isOptional="true">
          <type>int</type>
          <name>iCommandNum</name>
          <desc>Index des Kommandos. 0 für das aktuelle, 1 für das als nächstes auszuführende usw.</desc>
        </param>
      </params>
    </syntax>

    <desc>Beendet ein Kommado in der Kommandoliste eines Objekts.</desc>

    <examples>
      <example>
        <code>public func Production(object clonk)
{
  // Baum suchen
  <emLink href="script/NamedVar.html">var</emLink> pTree;
  if (!(pTree = FindWorkTree(clonk)))
  // Kein geeigneter Baum (fertig)
  {
	<funcLink>Message</funcLink>("$TxtNomoresuitabletrees$",this());
	FinishCommand(clonk, 0, 1);
	return(0);
  }
[...]
}
        </code>
        <text>
Auszug aus dem Sägewerk-Script. Finishcommand wird benutzt, um nachfolgende Kommandos darüber zu informieren,
dass die automatische Holzproduktion fehlgeschlagen ist. Produktion() wurde dabei durch ein Call-Kommando
aufgerufen, welches immer erfolgreich ist, wenn es die Funktion aufrufen kann. Deshalb muss FinishCommand
verwendet werden.
        </text>
      </example>
    </examples>
    <related>
      <funcLink>SetCommand</funcLink>
      <funcLink>GetCommand</funcLink>
      <funcLink>AppendCommand</funcLink>
	  <funcLink>AddCommand</funcLink>
	  <funcLink>PlayerObjectCommand</funcLink>
    </related>
  </func>
  <author>Günther</author><date>2004-04</date>
</clonkDoc>
